spring.application.name=api-gateway
server.port=40001
eureka.client.serviceUrl.defaultZone=http://peer1:9001/eureka/,http://peer3:9003/eureka/,http://peer2:9002/eureka/



#############    路由配置原则及规范   ################################################

#1、原始zuul自身路由的方式,不赞成使用，配置过于繁琐
#zuul.routes.api-a-url.path=/api-a-url/**
#zuul.routes.api-a-url.url=http://localhost:8080/

#2、服务路由方式：与eureka服务发现机制结合后的路由方式，具体的url交给服务发现机制，使用方式
#zuul.routes.api-a.path = /api-a/**
#zuul.routes.api-a.serviceId=hello-service
#
#zuul.routes.api-b.path = /api-b/**
#zuul.routes.api-b.serviceId=ribbon-consumer



#2.1、服务路由方式的简化方式,也是zuul引入eureka发现机制后，自动完成的
#zuul.routes.hello-service.path=hello-service/**
#zuul.routes.hello-service.serviceId=hello-service
#zuul.routes.<serviceId>=<path>
#服务路由方式，简化，类似于上面的
#zuul.routes.hello-service=/hello-service/**

#默认情况，会匹配所有得路径，用一下进行过滤
#对所有的服务都不创建路由规则，在此前提下，在添加2.1，就会创建服务关系
#zuul.ignored-services=*


#############   使用Ant风格路径表达式  共计3中通配符  ##################################

###    ？    匹配任意单个字符
###    *     匹配任意数量的字符
###    **    匹配任意数量的字符，支持多级目录


##############    忽略表达式    ################################
#过滤含有 hello的请求服务
#zuul.ignored-patterns=/**/hello/**

#############  路由前缀 暂时存在bug ，不建议使用#########################################

######################@@@@@@@@@@@@  本地跳转  ###############################################
#在本地controller中添加local方法
#zuul.routes.hello-service.path=/hello-service/**
#zuul.routes.hello-service.url=forward:/local

###################################   Cookie与头信息  ######################
#默认的敏感头信息一下配置来实现，设置为空，标识不过滤所有得请求头，不建议使用，破坏了 无状态的原则，web环境和app
#zuul.sensitive-headers=
#通过指定路由的参数来配置
#方法1
#zuul.routes.<router>.customSensitiveHearder = true
#方法2
#zuul.routes.<router>.sensitiveHearders=

#推荐使用上述两种方法，针对指定的web应用，开启对敏感信息的传递，影响范围小，不至于引起其他服务的信息泄露问题


###########################  重定向问题 参考：Camden版本有解决方案 ################################
#PreDecorationFilter实现扩展
#zuul.addHostHeader=true

###############Hystrix 和 Ribbon  ##########################
#zuul本身具有 断路器和负载均衡的作用，但是url path的路由方式，并不会有这种保护机制，
#所以尽量采用，path、serviceId，也就是 默认的面向服务路由的配置方式

#设置API网关中，路由转发的HystrixCommand执行超时时间，单位为毫秒，路由转发请求的命令执行时间超过
#该配置值后，Hystrix会将该执行命令标记为TIMEOUT，并且抛出异常，Zuul会对该异常进行处理，并且将返回值
#包装为JSON格式，返回给外部调用方
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds =

#TODO 需要进一步学习 与上面参数大小比较的情况
#ribbon.ConnectTimeout=

######################   过滤器详解  #######################################
